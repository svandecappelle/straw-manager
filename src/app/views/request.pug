extends template

block append body
  style.
    #list-requests_filter {
      display: none;
    }
  if !request
    .page-header
      h1 Request is invalid
      .row#pending-message
        .col.s12.text-center
          h4 you will be redirected to index in 5s.
          .preloader-wrapper.big.active
            .spinner-layer.spinner-blue
              .circle-clipper.left
                .circle
              .gap-patch
                .circle
              .circle-clipper.right
                .circle
            .spinner-layer.spinner-red
              .circle-clipper.left
                .circle
              .gap-patch
                .circle
              .circle-clipper.right
                .circle
            .spinner-layer.spinner-yellow
              .circle-clipper.left
                .circle
              .gap-patch
                .circle
              .circle-clipper.right
                .circle
            .spinner-layer.spinner-green
              .circle-clipper.left
                .circle
              .gap-patch
                .circle
              .circle-clipper.right
                .circle
      script
        :coffee-script
          $ ->
            setTimeout( ->
              rootPath = $("#root-straw-manager").attr("href")
              window.location.href = rootPath
            , 5000)
  else
    if request.data.libelles
      .col.s12.request
        a.green.lighten-1(href=request.url)= request.data.libelles.join("\t")
    
    ul.collapsible.green.lighten-2.grey.lighten-5(style="top:0px;position:sticky;z-index:1;", data-collapsible="expandable")
      li
        .collapsible-header.active Request #{request.requestID}
          if request.status === 'failed'
            span.badge.red.lighten-1.grey-text.text-lighten-5(style='vertical-align: middle; margin-left: 10px;') #{request.status}
          else if request.status === 'pending'
            span.badge.amber.lighten-1.grey-text.text-lighten-5(style='vertical-align: middle; margin-left: 10px;') #{request.status}
          else if request.status === 'set'
            span.badge.green.lighten-1.grey-text.text-lighten-5(style='vertical-align: middle; margin-left: 10px;') #{request.status}
        .collapsible-body.col.s12.request
          a.blue-text(href=request.url)= request.url
          .row
            .col-s6.m4 Kept pages
            if request.pages && request.aspired_pages
              .col-s6.m4
                span= JSON.stringify(request.aspired_pages) + ' pages / ' + JSON.stringify(request.pages.length + 1) + ' sources'
                if request.not_found_in_pages
                  span= '(Not in: ' + JSON.stringify(request.not_found_in_pages.length) + ')'
            else
              .col-s6.m4 all
      li
        .collapsible-header Details
        .collapsible-body
          .col-s6.m4= "Run at: " + new Date(request.requestDate).toISOString().slice(0, 19).replace('T', ' ')
          .col-s6.m4= "Done at: " + new Date(request.responseDate).toISOString().slice(0, 19).replace('T', ' ')
          .col-s6.m4.time-elapsed= "Elapsed time: "
    .col.s12
      .row
        .col.s12
          ul.request-errors.collapsible.red.lighten-2.grey-text.text-lighten-5(data-collapsible="accordion")
            if request.error
              li.error
                div.collapsible-header.red Error caught
                div.collapsible-body
                  pre
                    p= request.error.toString().replace(new RegExp(/\\n/, 'g'), "\n")
      .row
        ul.list-group#datas
          each val, index in request.data
            li.list-group-item.row
              .col-s6.m4= index
              .col-s6.m4= val
        table#list-requests.mdl-data-table.bordered.striped.transparent(width="100%;table-layout:fixed;")
          thead.sticky
            tr
              - rows = request.pages_detail
              - columns = []
              if rows
                each row in rows
                  th(width="20px") Request
                  each value, key in row
                    if key != "id"
                      th.mdl-data-table__cell--non-numeric(style="width:200px;word-wrap:break-word;")= key
                  - break
          tfoot
            tr
              if rows
                each row in rows
                  each value, key in row
                    th(style='padding: 0; margin: 0; vertical-align: middle; text-align:center;')
                      input.column-filter(type="text", placeholder=key)
                  - break
          tbody
            if request.pages_detail
              - var i = 0;
              each store_detail, storeid in request.pages_detail
                - i += 1;
                if store_detail
                  tr
                    td(style="max-width:200px")
                      span= i
                    each value, key in store_detail
                      if key == "status"
                        td
                          - color = "mdl-color--indigo-200"
                          if value == "200"
                            - color = "mdl-color--light-green-A100"
                          else if value == "404"
                            - color = 'mdl-color--red-500'
                          div(class=color, style="text-align: center")= value
                      else if key != "id"
                        td.mdl-data-table__cell--non-numeric(style="max-width:800px; text-overflow: ellipsis;overflow: hidden;")
                          if key == "magasin"
                            a(href=store_detail.url)= store_detail.magasin.id + ' -> ' + store_detail.magasin.name 
                          else if key == "title"
                            a(href=store_detail.id)= store_detail.title
                          else if key == "id"
                            a(href=store_detail.id)= store_detail.title
                          else if key == "from"
                            a(href=store_detail.from)= store_detail.from
                          else
                            span= value
    script#request-var(type='application/json')= JSON.stringify(request)
    script.
      var refresh_time = #{refresh_time}
      var columns = !{JSON.stringify(columns)}
    script
      :coffee-script
        table = $('#list-requests').DataTable({
          paging: true,
          "lengthMenu": [[100, -1], [100, "All"]]
          searching: true,
          scrollY: '440px',
          scrollCollapse: false,
          fixedHeader: {
            header: true
          }
        })
        table.columns().every( () ->
          that = this
          $( 'input.column-filter', this.footer()).on( 'keyup change', () ->
            if ( this.value != that.search() )
              that.search( this.value ).draw()
          )
        )
        rootPath = $("#root-straw-manager").attr("href")
        request = JSON.parse(document.getElementById('request-var').innerHTML
          .replace(/&quot;/g, '"')
          .replace(/&gt;/g, '>')
          .replace(/&lt;/g, '<')
          .replace(/&amp;/g, '&'));

        if (!request.responseDate)
          request.responseDate = moment();
        $('.time-elapsed').text("Elapsed time: " + moment.duration(moment(request.requestDate).diff(moment(request.responseDate))).format("h [h] mm [min] ss [secs]"));
        decode = (request) ->
          if (!request.responseDate)
            request.responseDate = moment();
          $('.time-elapsed').text("Elapsed time: " + moment.duration(moment(request.requestDate).diff(moment(request.responseDate))).format("h [h] mm [min] ss [secs]"));
          $("#request-" + request.requestID + " span.badge").text(request.status)
          $("#datas").empty()
          if request.error && $(".error").length == 0
            errorElement= $("<li>", {
              class: "error"
            })
            $('.request-errors').append(errorElement);
            errorHeader = $("<div>", {
              "class": "collapsible-header"
            });
            errorElement.append(errorHeader);
            errorHeader.text("Error caught");
            errorBody = $("<div>", {
              "class": "collapsible-body"
            });

            errorElement.append(errorBody).append($("<pre>").text(JSON.stringify JSON.parse(request.error), null, 4));

          for data, value of request.data
            obj = $("<li>", {
              class: "list-group-item row" 
            })
            obj.append($("<div>", {
              class: "col-xs-6 col-md-4"
            }).text(data))
            obj.append($("<div>", {
              class: "col-xs-6 col-md-4"
            }).text(value))
            $("#datas").append(obj)
            
          if (request.status != "pending")
            $("#auto-refresh").removeClass("active")
        $ ->
          $('#auto-refresh').click ->
            $(this).toggleClass("active")
            refresh()
          callback = (response) -> 
            decode(response)
            auto_refresh = $("#auto-refresh").hasClass("active")
            if auto_refresh
              setTimeout(refresh, refresh_time)
          refresh = () -> 
            $.get rootPath + "api/request/" + $(".request-view").data('id'), callback
          refresh()
